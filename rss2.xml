<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Long Luo&#39;s Life Notes</title>
    <link>https://www.longluo.me/</link>
    
    <image>
      <url>https://www.longluo.me/icon.png</url>
      <title>Long Luo&#39;s Life Notes</title>
      <link>https://www.longluo.me/</link>
    </image>
    
    <atom:link href="https://www.longluo.me/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>A Curious Engineer</description>
    <pubDate>Tue, 18 Feb 2025 13:57:59 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>为什么 2024 年会有 366 天？</title>
      <link>https://www.longluo.me/blog/leap-year/</link>
      <guid>https://www.longluo.me/blog/leap-year/</guid>
      <pubDate>Sat, 21 Dec 2024 13:28:05 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2024 年很快就要过去了，就在今天，我们脚下的地球已经以每秒约 30
公里的速度飞快越过了近日点，飞驰在围绕着太阳的椭圆轨道上。当 2025
年新年钟声敲响时，对于位于银河系第三旋臂边缘的这颗蓝色行星来说，不过是围绕着一颗黄矮星完成了一次再普通不过的公转，正如之前的
40
多亿次一样。而对于这颗行星上的碳基生物来说，不同的生物感受大不一样，这一刻却意味着对过去
366 个日夜 的告别与总结，也承载着对未来的期待与梦想。&lt;/p&gt;
&lt;p&gt;和 2023 年不一样的是，我们在 2024 年要经历 366 个日夜，因为 2024
年是&lt;strong&gt;闰年&lt;/strong&gt;。小学时，课本和老师都告诉我们一&lt;strong&gt;年&lt;/strong&gt;有
&lt;strong&gt;365&lt;/strong&gt; 天，但是闰年却是 &lt;strong&gt;366&lt;/strong&gt;
天，这多出来的一天就是 2 月 29 日，在英语中叫做 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;textit{Leap Day}&#92;)&lt;/span&gt;
。四年一闰，百年不闰，四百年再闰，这是闰年的规则。后来学习编程时，判断某一年是不是闰年也是常见的编程练习题。在学习之余，你有没有想过，为什么闰年的规则要这么奇怪呢？背后的原因是什么呢？&lt;/p&gt;
&lt;p&gt;小学读书时，就想 2 月份很委屈， 1 月 和 3 月都是 31 天，2 月却只有 28
或者 29 天，为什么 2 月这么特别呢？为什么有的月份是 31 天，有的月份是 30
天呢？但我的老师并没有讲清楚为什么，因为当时我的老师们也不清楚为什么，我也一直到大学里读了一本天文学书才知道了这个问题的答案。&lt;/p&gt;
&lt;p&gt;为什么 2024 年 2 月有 29
天？要回答这个问题，我们需要穿越历史的迷雾，回顾人类文明史，才能找到答案。&lt;/p&gt;
&lt;h1 id=&quot;逝者如斯夫不舍昼夜&quot;&gt;逝者如斯夫，不舍昼夜！&lt;/h1&gt;
&lt;p&gt;《鲁滨逊漂流记》中的鲁滨逊流落到荒岛之后第一时间就是竖起了一根大柱子，用刀子在立柱上刻上凹口当作日历。一方面是因为鲁滨逊是基督徒需要做礼拜，另外一方面也是为了记录时间。我们的现代生活是离不开钟表的，如果没有钟表来量化时间的话，我们的工作生活将失去秩序。当然鲁滨逊在荒岛上也只能过着“日出而作，日落而息”的农业社会生活，无法精确的安排工作和生活。&lt;/p&gt;
&lt;p&gt;“朝菌不知晦朔，蟪蛄不知春秋”，我们智人的寿命足够长，不像朝生暮死的蜉蝣，也不似春生夏死的寒蝉，可以目睹很多生命的诞生、成长以及消亡，感受时间的流逝。“逝者如斯夫，不舍昼夜！”，时间的洪流永远奔涌向前，然而虽然以我们生命的长度可以跨越四季与年轮，但是依然无法触及时间的尽头。&lt;/p&gt;
&lt;p&gt;寄蜉蝣于天地，渺沧海之一粟。哀吾生之须臾，羡长江之无穷。当然我们现在知道时间并不是均匀流逝的，也不能脱离物质而存在，但在足够宏大的尺度上，时间在均匀的流逝着。&lt;/p&gt;
&lt;p&gt;虽然你可能没有意识到，但是我们一直都在用着天然的时钟，它们就位于我们头顶的星空。这些时钟都足够精准，地球自转的每日误差在毫秒级别，月球公转和地球公转上百年也仅有几毫秒的差别。&lt;/p&gt;
&lt;p&gt;“日出东南隅，照我秦氏楼。”，新的一天又开始了；残月如弓，新月如眉，满月如镜，周而复始；“未觉池塘春草梦，阶前梧叶已秋声。”，四季轮回时，我们知道新的一年又来临了。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Science/">Science</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Time/">Time</category>
      
      <category domain="https://www.longluo.me/tags/Calendar/">Calendar</category>
      
      <category domain="https://www.longluo.me/tags/Leap-Year/">Leap Year</category>
      
      <category domain="https://www.longluo.me/tags/2024/">2024</category>
      
      
      <comments>https://www.longluo.me/blog/leap-year/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数学之美：几何视角下的高斯积分(Gaussian Integral)</title>
      <link>https://www.longluo.me/blog/gaussian-integral/</link>
      <guid>https://www.longluo.me/blog/gaussian-integral/</guid>
      <pubDate>Sat, 11 May 2024 07:34:38 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从之前的文章 &lt;a href=&quot;https://www.longluo.me/blog/normal-distribution/&quot;&gt;正态分布(Normal
Distribution)公式为什么长这样？&lt;/a&gt; 和 &lt;a href=&quot;https://www.longluo.me/blog/least-squares-and-normal-distribution/&quot;&gt;从最小二乘法到正态分布：高斯是如何找到失踪的谷神星的？&lt;/a&gt;
，我们使用了 &lt;span class=&quot;math inline&quot;&gt;&#92;(2&#92;)&lt;/span&gt;
种不同的方法最终得到了如下公式 &lt;span class=&quot;math inline&quot;&gt;&#92;((1)&#92;)&lt;/span&gt;
所示的误差的概率密度函数 ( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Probability
Density Function}&#92;)&lt;/span&gt; ) ：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
f(x) = &#92;mathrm{e}^{-cx^2}, &#92;, c &amp;gt; 0                 &#92;tag{1} &#92;label{1}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;其函数图像如下图 1 所示的钟形曲线 ( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Bell Curve}&#92;)&lt;/span&gt; ) ：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/normal-distribution/standard-deviation-diagram-micro.svg&quot; alt=&quot;图1. 钟形曲曲线&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图1. 钟形曲曲线&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;在概率论中，我们需要保证上图 1 中 &lt;span class=&quot;math inline&quot;&gt;&#92;(f(x)&#92;)&lt;/span&gt; 和 &lt;span class=&quot;math inline&quot;&gt;&#92;(x&#92;)&lt;/span&gt; 轴围成的面积是 &lt;span class=&quot;math inline&quot;&gt;&#92;(1&#92;)&lt;/span&gt; , 即：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
&#92;int_{- &#92;infty}^{+ &#92;infty} f(x) &#92;mathrm{d}x = 1              &#92;tag{2}
&#92;label{2}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最终我们得到了正态分布 ( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Normal
Distribution}&#92;)&lt;/span&gt; ) 的公式如下所示：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
f(x) = {&#92;frac {1}{&#92;sigma {&#92;sqrt {2 &#92;pi }}}}&#92;;e^{-{&#92;frac {&#92;left(x - &#92;mu
&#92;right)^{2}}{2 &#92;sigma ^{2}}}}                &#92;tag{3} &#92;label{3}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;上式中有一个 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;pi&#92;)&lt;/span&gt; ，用费曼( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Richard Feynman}&#92;)&lt;/span&gt;
)的话来说，当我们看到一个公式中存在 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;pi&#92;)&lt;/span&gt; 时，我们都要问自己“Where is the
cycle?”。我们知道公式 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;eqref{3}&#92;)&lt;/span&gt;
中的归一化系数 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;dfrac {1}{&#92;sigma {&#92;sqrt {2
&#92;pi }}}&#92;)&lt;/span&gt; 是为了保证 &lt;span class=&quot;math inline&quot;&gt;&#92;(f(x)&#92;)&lt;/span&gt;
下的面积为 &lt;span class=&quot;math inline&quot;&gt;&#92;(1&#92;)&lt;/span&gt; ，出现 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;pi&#92;)&lt;/span&gt; 是因为高斯积分 ( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Gaussian Integral}&#92;)&lt;/span&gt; ) 的结果为 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;sqrt{&#92;pi}&#92;)&lt;/span&gt; 。&lt;/p&gt;
&lt;p&gt;那么什么是高斯积分呢？高斯积分和圆有什么关系呢？&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Gaussian-Integral/">Gaussian Integral</category>
      
      <category domain="https://www.longluo.me/tags/Normal-Distribution/">Normal Distribution</category>
      
      <category domain="https://www.longluo.me/tags/Statistics/">Statistics</category>
      
      <category domain="https://www.longluo.me/tags/Circle/">Circle</category>
      
      
      <comments>https://www.longluo.me/blog/gaussian-integral/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>从最小二乘法到正态分布：高斯是如何找到失踪的谷神星的？</title>
      <link>https://www.longluo.me/blog/least-squares-and-normal-distribution/</link>
      <guid>https://www.longluo.me/blog/least-squares-and-normal-distribution/</guid>
      <pubDate>Thu, 02 May 2024 02:35:08 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在上一篇文章 &lt;a href=&quot;https://www.longluo.me/blog/2024/04/27/normal-distribution/&quot;&gt;正态分布(Normal
Distribution)公式为什么长这样？&lt;/a&gt;
中，我们使用了&lt;strong&gt;投掷飞镖&lt;/strong&gt;的模型，推导出了正态分布( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Normal Distribution}&#92;)&lt;/span&gt;
)的表达式。这种方法既优雅又直观，所以常被用于科普视频或者文章中。那么这个例子是怎么来的呢？我们知道这个方法是天文学家赫歇尔（
&lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{John Herschel}&#92;)&lt;/span&gt; ）在 1850
年给出的，难道他在投掷飞镖时想到的吗？&lt;/p&gt;
&lt;p&gt;答案是否定的，原因是因为赫歇尔作为一个天文学家，需要精确的测量天体的位置，而在观测星星时，必须要考虑误差的影响。星星在天球中的位置误差是&lt;strong&gt;二维&lt;/strong&gt;的，考虑到误差大家不太好理解，所以用了投掷飞镖这个更通俗易懂的例子。&lt;/p&gt;
&lt;p&gt;正如法国著名哲学家孔德( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Auguste
Comte}&#92;)&lt;/span&gt; ，1798-1857)所说“To understand a science, it is
necessary to know its history.
”，只有了解这个学科的发展历史，了解这个学科的重要概念是如何建立起来的，才能真正理解这个学科。不同于我们在课本中学习顺序，科学是用来解决实际问题的，科学是由一个个问题所驱动发展的。正如仅次牛顿和爱因斯坦的伟大物理学家麦克斯韦(
&lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{James Clerk Maxwell}&#92;)&lt;/span&gt; )
曾说过“It is of great advantage to the student of any subject to read
the original memoirs on that subject, for science is always most
completely assimilated when it is in the nascent
state…”，我们学习历史上科学家是如何解决这些问题，用了什么方法，才能获取某个概念的
&lt;strong&gt;insight&lt;/strong&gt; ，建立 &lt;strong&gt;intuition&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;正态分布，又被称为高斯分布（ &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Gaussian Distribution}&#92;)&lt;/span&gt;
），人们可能会以为正态分布是由高斯发现的，但事实并非如此！&lt;/p&gt;
&lt;p&gt;正态分布最早是由法国数学家棣莫弗( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Abraham de Moivre}&#92;)&lt;/span&gt; , 1667-1754)在
1718
年左右发现的。他为了解决朋友提出的一个赌博问题，而去认真研究了二项分布。他发现当实验次数增大时，二项分布(
&lt;span class=&quot;math inline&quot;&gt;&#92;(p=0.5&#92;)&lt;/span&gt;
)趋近于一个看起来呈钟形的曲线，如下图 1
所示。后来著名法国数学家拉普拉斯( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Pierre-Simon Laplace}&#92;)&lt;/span&gt; ,
1749-1827)对此作了更详细的研究，并证明了 &lt;span class=&quot;math inline&quot;&gt;&#92;(p
&#92;ne 0.5&#92;)&lt;/span&gt;
时二项分布的极限也是正态分布。之后人们便将此称为&lt;strong&gt;棣莫弗 -
拉普拉斯中心极限定理&lt;/strong&gt;（ &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Central limit theorem}&#92;)&lt;/span&gt; ）。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/probability/de-moivre-laplace.gif&quot; alt=&quot;图1. 二项分布趋近钟形曲线&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图1. 二项分布趋近钟形曲线&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h1 id=&quot;失踪的谷神星&quot;&gt;失踪的谷神星&lt;/h1&gt;
&lt;p&gt;16 和 17
世纪是天文学发展的黄金时期，这一时期的科学革命彻底改变了人类对宇宙的理解。哥白尼(
&lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Nicolaus Copernicus}&#92;)&lt;/span&gt;
，1473-1543)的日心说、开普勒( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Johannes
Kepler}&#92;)&lt;/span&gt; ，1571-1630)的行星运动三定律、伽利略( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Galileo Galilei}&#92;)&lt;/span&gt;
，1564-1642)的望远镜观测以及牛顿( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Isaac Newton}&#92;)&lt;/span&gt;
，1643-1727)的万有引力定律共同构成了现代天文学的基础。这一时期的科学家们不仅改变了人类对宇宙的理解，还为后续的科学研究提供了重要的方法和工具。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Normal-Distribution/">Normal Distribution</category>
      
      <category domain="https://www.longluo.me/tags/Least-Squares/">Least Squares</category>
      
      <category domain="https://www.longluo.me/tags/Gauss/">Gauss</category>
      
      
      <comments>https://www.longluo.me/blog/least-squares-and-normal-distribution/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>正态分布(Normal Distribution)公式为什么长这样？</title>
      <link>https://www.longluo.me/blog/normal-distribution/</link>
      <guid>https://www.longluo.me/blog/normal-distribution/</guid>
      <pubDate>Sat, 27 Apr 2024 05:16:57 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;相信大家或多或少都听过六西格玛( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{6
Sigma}&#92;)&lt;/span&gt; ) &lt;a href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; 这个词，六西格玛是指生产的产品中，
&lt;span class=&quot;math inline&quot;&gt;&#92;(99.99966&#92;%&#92;)&lt;/span&gt;
的产品是没有质量问题的，即只有 &lt;span class=&quot;math inline&quot;&gt;&#92;(3.4ppm&#92;)&lt;/span&gt; 的不良率。&lt;/p&gt;
&lt;p&gt;假如一家工厂生产某型号零件，零件的长度要求是 &lt;span class=&quot;math inline&quot;&gt;&#92;(100mm&#92;)&lt;/span&gt; ，允许的标准差是 &lt;span class=&quot;math inline&quot;&gt;&#92;(0.1mm&#92;)&lt;/span&gt; 。根据 &lt;span class=&quot;math inline&quot;&gt;&#92;(6 &#92;sigma&#92;)&lt;/span&gt; 原则，零件规格允许的偏差范围是：
&lt;span class=&quot;math inline&quot;&gt;&#92;(100 &#92;pm  6 &#92;times 0.1 = 100 &#92;pm 0.6&#92;)&lt;/span&gt;
。&lt;/p&gt;
&lt;p&gt;这意味着，零件长度超过 &lt;span class=&quot;math inline&quot;&gt;&#92;(100.6mm&#92;)&lt;/span&gt;
或低于 &lt;span class=&quot;math inline&quot;&gt;&#92;(99.4mm&#92;)&lt;/span&gt;
的概率是非常低的，约为 &lt;span class=&quot;math inline&quot;&gt;&#92;(0.00034&#92;%&#92;)&lt;/span&gt;
。如果工厂每天生产 100 万个零件，只允许有 &lt;span class=&quot;math inline&quot;&gt;&#92;(3.4&#92;)&lt;/span&gt; 个零件会超出 &lt;span class=&quot;math inline&quot;&gt;&#92;(6 &#92;sigma&#92;)&lt;/span&gt;
的范围，几乎可以忽略不计。因此，生产过程是极其稳定和可靠的，达到了六西格玛水平。&lt;/p&gt;
&lt;p&gt;那么 &lt;span class=&quot;math inline&quot;&gt;&#92;(6 &#92;sigma&#92;)&lt;/span&gt; 中 &lt;span class=&quot;math inline&quot;&gt;&#92;(3.4ppm&#92;)&lt;/span&gt; 的不良率来自哪里呢？&lt;/p&gt;
&lt;p&gt;学过中学数学都知道，在&lt;strong&gt;正态分布&lt;/strong&gt;( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Normal Distribution}&#92;)&lt;/span&gt; ) &lt;a href=&quot;#fn2&quot; class=&quot;footnote-ref&quot; id=&quot;fnref2&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; 中， &lt;span class=&quot;math inline&quot;&gt;&#92;(68.27&#92;%&#92;)&lt;/span&gt; 的数据位于平均值的一个标准差内，
&lt;span class=&quot;math inline&quot;&gt;&#92;(95.45&#92;%&#92;)&lt;/span&gt; 位于两个标准差内， &lt;span class=&quot;math inline&quot;&gt;&#92;(99.73&#92;%&#92;)&lt;/span&gt; 位于三个标准差内，这也是著名的
68-95-99.7 Rule &lt;a href=&quot;#fn3&quot; class=&quot;footnote-ref&quot; id=&quot;fnref3&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; ，如下图 1 所示：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/normal-distribution/standard-deviation-diagram-micro.svg&quot; alt=&quot;图1. 68-95-99.7 Rule&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图1. 68-95-99.7 Rule&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h1 id=&quot;什么是正态分布&quot;&gt;什么是正态分布？&lt;/h1&gt;
&lt;p&gt;数据可以用不同的方式“分布”，比如数据可以向左散布的多一些，也可以向右散布的多一些，或者分布的乱七八糟，如下图
2 - 4 所示，&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/normal-distribution/normal-distribution-skew-left.gif&quot; alt=&quot;图2. 数据偏向左散布&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图2. 数据偏向左散布&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/normal-distribution/normal-distribution-skew-right.gif&quot; alt=&quot;图3. 数据偏向右散布&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图3. 数据偏向右散布&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/normal-distribution/normal-distribution-random.gif&quot; alt=&quot;图4. 数据随机分布&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图4. 数据随机分布&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;但数据经常会集中在一个中心值的附近，而不向左或右偏斜，像一个&lt;strong&gt;钟形&lt;/strong&gt;，如下图
5 所示。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/normal-distribution/empirical-rule-histogram.svg&quot; alt=&quot;图5. 数据正态分布&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图5. 数据正态分布&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;正态分布，又称高斯分布（ &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Gaussian
Distribution}&#92;)&lt;/span&gt; ），是一种重要的概率分布，数学王子高斯 &lt;a href=&quot;#fn4&quot; class=&quot;footnote-ref&quot; id=&quot;fnref4&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;
在正态分布的研究和应用上做出了巨大贡献。有很多日常现象都符合这种分布，如人的身高、考试成绩等。正因为它几乎无处不在，所以叫
&lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;text{Normal Distribution}&#92;)&lt;/span&gt;
。德国曾经发行的一款 10 马克的纸币上就印着高斯和正态分布曲线，如下图 6
所示。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/normal-distribution/gauss-10-mark.jpg&quot; alt=&quot;图6. 高斯和正态分布曲线&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图6. 高斯和正态分布曲线&lt;/figcaption&gt;
&lt;/figure&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Probability/">Probability</category>
      
      <category domain="https://www.longluo.me/tags/Normal-Distribution/">Normal Distribution</category>
      
      <category domain="https://www.longluo.me/tags/Statistics/">Statistics</category>
      
      
      <comments>https://www.longluo.me/blog/normal-distribution/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>高速公路编号背后的数学密码</title>
      <link>https://www.longluo.me/blog/decode-the-highway-system-numbers/</link>
      <guid>https://www.longluo.me/blog/decode-the-highway-system-numbers/</guid>
      <pubDate>Sun, 21 Apr 2024 00:08:32 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;世界那么大，我想去看看！随着科技的发展，我们早已做到无需离开家就能领略世界各地的风景和文化。通过高清视频、高清直播、社交媒体、
VR
技术、各种图片或者视频分享平台，我们不仅可以体验世界名胜古迹、自然美景和各地的风土人情，还能与当地居民互动，了解他们的日常生活和传统文化。互联网丰富了人们的生活，缩小了地域的界限，真正实现了让世界触手可及，足不出户便可周游世界的梦想。但正所谓“百闻不如一见”，“读万卷书，不如行万里路！”，尽管互联网让我们可以虚拟游览世界，但亲自出行的体验无可替代。自由行不仅提供了前所未有的自由和灵活性，还能让我们亲身感受到大自然的美妙、城市的活力。这种身临其境的体验，远非屏幕前的感受可比。&lt;/p&gt;
&lt;p&gt;当你打开地图软件时，你会看到如图 1 所示的道路标志，&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/road/highway-mark.png&quot; alt=&quot;图1. 道路编号&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图1. 道路编号&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;当你在道路出行时，你也会看到看到如下图 2
所示的路牌，但你可能并未真正留意过这些标志。因为现在我们只需要有一部联网的智能手机，在地图类软件里，设定出发地和目的地，自然有导航会指引我们到达目的地。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/road/china-expwy-g35-sign-with-name-in-luogang-tollgate.jpg&quot; alt=&quot;图2. G35 高速萝岗路段&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图2. G35 高速萝岗路段&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这些编号肯定不是随机的，那么这些道路编号到底有什么用呢？出于好奇心你可能会去寻找答案，你很容易轻松找到
中国国家高速的编号密码 &lt;a href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; 和 高速公路是怎样命名和编号 &lt;a href=&quot;#fn2&quot; class=&quot;footnote-ref&quot; id=&quot;fnref2&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;
这样的文章。但这些文章只是告诉我们是什么，并没有告诉我们为什么。&lt;/p&gt;
&lt;p&gt;国内现行的高速公路命名是由交通部从 2005 年启动的 &lt;a href=&quot;#fn3&quot; class=&quot;footnote-ref&quot; id=&quot;fnref3&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;
，之前道路都以起始地和终点地命名。你可能会想，之前那种命名方式不是更合理吗？用了数字不是更加不清晰易懂吗？如果图
1 不是路牌上写了济广高速，谁知道 G35 &lt;a href=&quot;#fn4&quot; class=&quot;footnote-ref&quot; id=&quot;fnref4&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; 是哪里到哪里呢？&lt;/p&gt;
&lt;p&gt;如果你更进一步的话，如果你去了解世界其他国家的高速公路命名的话，你会惊讶的地发现为什么居然全世界各主要大国都选择了类似的编号系统，这背后的原因是什么呢？&lt;/p&gt;
&lt;p&gt;要回答这个问题，我们需要把时钟拨回几十年前，回到高速公路诞生的时期，那个没有
GPS
，没有手机，只有纸质地图的时代，我们才能知道这种编号系统的&lt;strong&gt;重要意义&lt;/strong&gt;和&lt;strong&gt;实用性&lt;/strong&gt;，以及背后的&lt;strong&gt;数学密码&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&quot;世界各国如何对高速公路进行编号&quot;&gt;世界各国如何对高速公路进行编号？&lt;/h1&gt;
&lt;p&gt;我们已经了解了国内高速公路编号 &lt;a href=&quot;#fn5&quot; class=&quot;footnote-ref&quot; id=&quot;fnref5&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;
，让我们看看其他国家的高速公路系统编号是什么样的。这些国家需要国土面积足够大，高速公路系统足够发达，国土疆域长宽比例没有太夸张，人口分布比较均匀。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Code/">Code</category>
      
      <category domain="https://www.longluo.me/tags/Navigation/">Navigation</category>
      
      <category domain="https://www.longluo.me/tags/Highway/">Highway</category>
      
      
      <comments>https://www.longluo.me/blog/decode-the-highway-system-numbers/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2024 阿里巴巴全球数学竞赛预选赛 试题解答</title>
      <link>https://www.longluo.me/blog/2024-alibaba-global-mathematics-competition-qualifying-round/</link>
      <guid>https://www.longluo.me/blog/2024-alibaba-global-mathematics-competition-qualifying-round/</guid>
      <pubDate>Tue, 16 Apr 2024 03:13:48 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://damo.alibaba.com/?language=zh&quot;&gt;阿里巴巴达摩院&lt;/a&gt; 从
2018
年开始每年都会举办一届全球数学竞赛，之前一方面自己数学水平比较弱，另外一方面也没有报名，但一直很仰慕那些数学大神的风采。今年是第一次报名参加
&lt;a href=&quot;https://damo.alibaba.com/alibaba-global-mathematics-competition?language=zh&quot;&gt;2024阿里巴巴全球数学竞赛&lt;/a&gt;
，上周末参加了预选赛，但遗憾的是，全部 &lt;span class=&quot;math inline&quot;&gt;&#92;(7&#92;)&lt;/span&gt; 道题中只有第 &lt;span class=&quot;math inline&quot;&gt;&#92;(1, 2, 6&#92;)&lt;/span&gt; 题会做，这里分享下我的解答：&lt;/p&gt;
&lt;h1 id=&quot;problem-1&quot;&gt;Problem 1&lt;/h1&gt;
&lt;p&gt;几位同学假期组成一个小组去某市旅游. 该市有 &lt;span class=&quot;math inline&quot;&gt;&#92;(6&#92;)&lt;/span&gt; 座塔，它们的位置分别为 &lt;span class=&quot;math inline&quot;&gt;&#92;(A, B, C, D, E, F&#92;)&lt;/span&gt;
。同学们自由行动一段时间后，每位同学都发现，自己在所在的位置只能看到位于
&lt;span class=&quot;math inline&quot;&gt;&#92;(A, B, C, D&#92;)&lt;/span&gt; 处的四座塔，而看不到位于
&lt;span class=&quot;math inline&quot;&gt;&#92;(E&#92;)&lt;/span&gt; 和 &lt;span class=&quot;math inline&quot;&gt;&#92;(F&#92;)&lt;/span&gt; 的塔。已知：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;同学们的位置和塔的位置均视为同一平面上的点，且这些点彼此不重合；&lt;/li&gt;
&lt;li&gt;塔中任意 &lt;span class=&quot;math inline&quot;&gt;&#92;(3&#92;)&lt;/span&gt; 点不共线；&lt;/li&gt;
&lt;li&gt;看不到塔的唯一可能就是视线被其它的塔所阻挡，例如，如果某位同学所在的位置
&lt;span class=&quot;math inline&quot;&gt;&#92;(P&#92;)&lt;/span&gt; 和 &lt;span class=&quot;math inline&quot;&gt;&#92;(A
, B&#92;)&lt;/span&gt; 共线，且 &lt;span class=&quot;math inline&quot;&gt;&#92;(A&#92;)&lt;/span&gt; 在线段
&lt;span class=&quot;math inline&quot;&gt;&#92;(PB&#92;)&lt;/span&gt; 上，那么该同学就看不到位于 &lt;span class=&quot;math inline&quot;&gt;&#92;(B&#92;)&lt;/span&gt; 处的塔。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;（5 分）&lt;/strong&gt; 请问 这个旅游小组最多可能有多少名同学？&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math inline&quot;&gt;&#92;(A. 3&#92;)&lt;/span&gt;&lt;br&gt;
&lt;span class=&quot;math inline&quot;&gt;&#92;(B. 4&#92;)&lt;/span&gt; &lt;span class=&quot;math inline&quot;&gt;&#92;(C.
6&#92;)&lt;/span&gt; &lt;span class=&quot;math inline&quot;&gt;&#92;(D. 12&#92;)&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;这道题选 &lt;span class=&quot;math inline&quot;&gt;&#92;(C&#92;)&lt;/span&gt; ，最多只能有 &lt;span class=&quot;math inline&quot;&gt;&#92;(6&#92;)&lt;/span&gt; 名同学。&lt;/p&gt;
&lt;div class=&quot;note info&quot;&gt;&lt;p&gt;这道题的&lt;strong&gt;解题思路&lt;/strong&gt;是从假设只有 &lt;span class=&quot;math inline&quot;&gt;&#92;(1&#92;)&lt;/span&gt; 座塔开始，一直到 &lt;span class=&quot;math inline&quot;&gt;&#92;(6&#92;)&lt;/span&gt; 座塔，找到思路。&lt;/p&gt;
&lt;/div&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;p&gt;假设有 &lt;span class=&quot;math inline&quot;&gt;&#92;(1&#92;)&lt;/span&gt; 座塔 &lt;span class=&quot;math inline&quot;&gt;&#92;(A&#92;)&lt;/span&gt; ，那么很显然有无数多同学可以看到塔
&lt;span class=&quot;math inline&quot;&gt;&#92;(A&#92;)&lt;/span&gt; ，也可以有无数多同学看不到塔
&lt;span class=&quot;math inline&quot;&gt;&#92;(A&#92;)&lt;/span&gt;​ ；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;假设有 &lt;span class=&quot;math inline&quot;&gt;&#92;(2&#92;)&lt;/span&gt; 座塔 &lt;span class=&quot;math inline&quot;&gt;&#92;(A, B&#92;)&lt;/span&gt; ，那么只有以 &lt;span class=&quot;math inline&quot;&gt;&#92;(A&#92;)&lt;/span&gt; 为起点的射线 &lt;span class=&quot;math inline&quot;&gt;&#92;(AB&#92;)&lt;/span&gt; 且位于 &lt;span class=&quot;math inline&quot;&gt;&#92;(B&#92;)&lt;/span&gt; 之后的同学无法看到塔 &lt;span class=&quot;math inline&quot;&gt;&#92;(A&#92;)&lt;/span&gt; ；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;假设有 &lt;span class=&quot;math inline&quot;&gt;&#92;(3&#92;)&lt;/span&gt; 座塔 &lt;span class=&quot;math inline&quot;&gt;&#92;(A, B, C&#92;)&lt;/span&gt;
，同理可知存在无数位同学至少可以看见 &lt;span class=&quot;math inline&quot;&gt;&#92;(2&#92;)&lt;/span&gt; 座塔；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;假设有 &lt;span class=&quot;math inline&quot;&gt;&#92;(4&#92;)&lt;/span&gt; 座塔 &lt;span class=&quot;math inline&quot;&gt;&#92;(A, B, C, D&#92;)&lt;/span&gt;
，同理可知存在无数位同学至少可以看见 &lt;span class=&quot;math inline&quot;&gt;&#92;(2&#92;)&lt;/span&gt; 座塔；&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;假设有 &lt;span class=&quot;math inline&quot;&gt;&#92;(6&#92;)&lt;/span&gt; 座塔 &lt;span class=&quot;math inline&quot;&gt;&#92;(A, B, C, D, E, F&#92;)&lt;/span&gt; ，如果每位同学都无法看见
&lt;span class=&quot;math inline&quot;&gt;&#92;(E, F&#92;)&lt;/span&gt; 塔，如下图1 所示：&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/math/2024-alibaba-math-contest-problem1-solution.png&quot; alt=&quot;图1. Solution of Problem 1&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图1. Solution of Problem 1&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;所以至多有 &lt;span class=&quot;math inline&quot;&gt;&#92;(6&#92;)&lt;/span&gt; 位同学位于 &lt;span class=&quot;math inline&quot;&gt;&#92;(M, N, O, P, R, Q&#92;)&lt;/span&gt; 处，无法看到塔 &lt;span class=&quot;math inline&quot;&gt;&#92;(E, F&#92;)&lt;/span&gt; 。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Geometry/">Geometry</category>
      
      <category domain="https://www.longluo.me/tags/Algebra/">Algebra</category>
      
      <category domain="https://www.longluo.me/tags/Probability/">Probability</category>
      
      <category domain="https://www.longluo.me/tags/Analysis/">Analysis</category>
      
      
      <comments>https://www.longluo.me/blog/2024-alibaba-global-mathematics-competition-qualifying-round/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>库函数 (libm) 是如何计算三角函数值的？</title>
      <link>https://www.longluo.me/blog/sine/</link>
      <guid>https://www.longluo.me/blog/sine/</guid>
      <pubDate>Fri, 16 Feb 2024 12:32:58 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;挖坑&quot;&gt;挖坑！&lt;/h1&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td</description>
          
        
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Algorithm/">Algorithm</category>
      
      <category domain="https://www.longluo.me/tags/Arithmetic/">Arithmetic</category>
      
      <category domain="https://www.longluo.me/tags/Floating-point/">Floating-point</category>
      
      <category domain="https://www.longluo.me/tags/%E6%B5%AE%E7%82%B9%E6%95%B0/">浮点数</category>
      
      
      <comments>https://www.longluo.me/blog/sine/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>payne hanek 归约算法</title>
      <link>https://www.longluo.me/blog/payne-hanek/</link>
      <guid>https://www.longluo.me/blog/payne-hanek/</guid>
      <pubDate>Mon, 22 Jan 2024 13:10:50 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;挖坑&quot;&gt;挖坑&lt;/h1&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;参考文献&lt;/h1&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;a</description>
          
        
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Algorithm/">Algorithm</category>
      
      <category domain="https://www.longluo.me/tags/Arithmetic/">Arithmetic</category>
      
      <category domain="https://www.longluo.me/tags/Argument-Reduction/">Argument Reduction</category>
      
      <category domain="https://www.longluo.me/tags/Computer-Arithmetic/">Computer Arithmetic</category>
      
      <category domain="https://www.longluo.me/tags/%E5%8F%82%E6%95%B0%E5%BD%92%E7%BA%A6/">参数归约</category>
      
      <category domain="https://www.longluo.me/tags/Floating-point/">Floating-point</category>
      
      <category domain="https://www.longluo.me/tags/%E6%B5%AE%E7%82%B9%E6%95%B0/">浮点数</category>
      
      <category domain="https://www.longluo.me/tags/Trigonometric/">Trigonometric</category>
      
      
      <comments>https://www.longluo.me/blog/payne-hanek/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>音乐背后的数学</title>
      <link>https://www.longluo.me/blog/math-of-music/</link>
      <guid>https://www.longluo.me/blog/math-of-music/</guid>
      <pubDate>Fri, 12 Jan 2024 11:18:38 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;挖坑&quot;&gt;挖坑&lt;/h1&gt;
&lt;h1 id=&quot;声音是什么&quot;&gt;声音是什么？&lt;/h1&gt;
&lt;h1 id=&quot;什么是和弦&quot;&gt;什么是和弦？&lt;/h1&gt;
&lt;h1</description>
          
        
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Music/">Music</category>
      
      
      <comments>https://www.longluo.me/blog/math-of-music/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>素描背后的物理</title>
      <link>https://www.longluo.me/blog/physics-behind-drawings/</link>
      <guid>https://www.longluo.me/blog/physics-behind-drawings/</guid>
      <pubDate>Sat, 30 Dec 2023 14:53:51 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;挖坑&quot;&gt;挖坑&lt;/h1&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;参考文献&lt;/h1&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;a</description>
          
        
      
      
      
      
      <category domain="https://www.longluo.me/categories/Physics/">Physics</category>
      
      
      <category domain="https://www.longluo.me/tags/Physics/">Physics</category>
      
      
      <comments>https://www.longluo.me/blog/physics-behind-drawings/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>cody waite</title>
      <link>https://www.longluo.me/blog/cody-waite/</link>
      <guid>https://www.longluo.me/blog/cody-waite/</guid>
      <pubDate>Tue, 19 Dec 2023 12:10:19 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;挖坑&quot;&gt;挖坑&lt;/h1&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;参考文献&lt;/h1&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;a</description>
          
        
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Algorithm/">Algorithm</category>
      
      <category domain="https://www.longluo.me/tags/Arithmetic/">Arithmetic</category>
      
      <category domain="https://www.longluo.me/tags/Argument-Reduction/">Argument Reduction</category>
      
      <category domain="https://www.longluo.me/tags/Computer-Arithmetic/">Computer Arithmetic</category>
      
      <category domain="https://www.longluo.me/tags/%E5%8F%82%E6%95%B0%E5%BD%92%E7%BA%A6/">参数归约</category>
      
      <category domain="https://www.longluo.me/tags/Floating-point/">Floating-point</category>
      
      <category domain="https://www.longluo.me/tags/%E6%B5%AE%E7%82%B9%E6%95%B0/">浮点数</category>
      
      <category domain="https://www.longluo.me/tags/Trigonometric/">Trigonometric</category>
      
      
      <comments>https://www.longluo.me/blog/cody-waite/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>浮点数</title>
      <link>https://www.longluo.me/blog/floating-point/</link>
      <guid>https://www.longluo.me/blog/floating-point/</guid>
      <pubDate>Sun, 03 Dec 2023 14:12:45 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;挖坑&quot;&gt;挖坑&lt;/h1&gt;
&lt;p&gt;假如你知道浮点数的话，你就知道为什么了！&lt;/p&gt;
&lt;p&gt;按照 IEEE 754 浮点数标准 制定的 浮点数运算法则，</description>
          
        
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Algorithm/">Algorithm</category>
      
      <category domain="https://www.longluo.me/tags/Arithmetic/">Arithmetic</category>
      
      <category domain="https://www.longluo.me/tags/Floating-point/">Floating-point</category>
      
      <category domain="https://www.longluo.me/tags/%E6%B5%AE%E7%82%B9%E6%95%B0/">浮点数</category>
      
      
      <comments>https://www.longluo.me/blog/floating-point/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Remez Algorithm</title>
      <link>https://www.longluo.me/blog/remez-algorithm/</link>
      <guid>https://www.longluo.me/blog/remez-algorithm/</guid>
      <pubDate>Fri, 06 Oct 2023 23:08:37 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;挖坑&quot;&gt;挖坑&lt;/h1&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;参考文献&lt;/h1&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;a</description>
          
        
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Calculus/">Calculus</category>
      
      <category domain="https://www.longluo.me/tags/Taylor-Series/">Taylor Series</category>
      
      
      <comments>https://www.longluo.me/blog/remez-algorithm/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>参数归约算法(Argument Range Reduction)：如何在浮点数环境下计算超大数字的三角函数值？</title>
      <link>https://www.longluo.me/blog/argument-range-reduction/</link>
      <guid>https://www.longluo.me/blog/argument-range-reduction/</guid>
      <pubDate>Sat, 16 Sep 2023 14:05:07 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;之前写过一篇介绍 CORDIC 算法 &lt;a href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; 的文章，里面提到 CORDIC
算法的 &lt;a href=&quot;https://www.longluo.me/blog/cordic/#cordic-%E7%AE%97%E6%B3%95%E7%9A%84%E4%B8%8D%E8%B6%B3&quot;&gt;&lt;strong&gt;不足&lt;/strong&gt;&lt;/a&gt;
之处，CORDIC 算法的输入角度范围需要在 &lt;span class=&quot;math inline&quot;&gt;&#92;([−99.88^{&#92;circ} , 99.88^{&#92;circ}]&#92;)&lt;/span&gt;
，那么我们不禁要问，如果输入角度 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;large
{&#92;theta }&#92;)&lt;/span&gt; 很大的话，怎么处理呢？&lt;/p&gt;
&lt;p&gt;这个问题同样存在于 泰勒展开式(Taylor series) &lt;a href=&quot;#fn2&quot; class=&quot;footnote-ref&quot; id=&quot;fnref2&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;
中，比如 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;large {&#92;sin (x) }&#92;)&lt;/span&gt; 和
&lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;large {&#92;cos (x) }&#92;)&lt;/span&gt;
的泰勒展开式：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
&#92;sin(x) = x - &#92;frac {1}{3!}x^3 + &#92;frac {1}{5!}x^5 - &#92;frac {1}{7!} x^7 +
&#92;frac {1}{9!} x^9 + o(x^9) &#92;quad &#92;forall x &#92;subset &#92;mathbb{R}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
&#92;cos(x) = 1 - &#92;frac {1}{2!}x^2 + &#92;frac {1}{4!}x^4 - &#92;frac {1}{6!} x^6 +
&#92;frac {1}{8!} x^8 + o(x^8) &#92;quad &#92;forall x &#92;subset &#92;mathbb{R}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;虽然在整个实数集 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;large {
&#92;mathbb{R}}&#92;)&lt;/span&gt;
都成立，但是在实际应用中因为展开项数限制和浮点数的精度限制， &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;large {x}&#92;)&lt;/span&gt; 的范围只有在接近 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;large {0}&#92;)&lt;/span&gt; 的时候才有比较高的精度。&lt;/p&gt;
&lt;p&gt;但是实际应用中，如果输入 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;large
{x}&#92;)&lt;/span&gt; 很大的话，比如 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;large {2^{32},
10^{10}, 10^{22} &#92;dots }&#92;)&lt;/span&gt; 情况下怎么得到足够精确的值呢？&lt;/p&gt;
&lt;p&gt;中学里我们知道三角函数是&lt;strong&gt;周期函数&lt;/strong&gt;，对于比较大的值，我们可以使用下面的公式将值&lt;strong&gt;归约&lt;/strong&gt;到一个比较小的范围内。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
x&#39; = x - 2k &#92;pi &#92;quad k &#92;subset &#92;mathbb{Z}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;这就是我们今天要讲的 &lt;strong&gt;参数归约(Argument Reduction)&lt;/strong&gt;
算法。&lt;/p&gt;
&lt;h1 id=&quot;从小学计算题开始&quot;&gt;从小学计算题开始&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;参数归约&lt;/strong&gt;
听起来就很唬人，什么是参数啊，什么归约啊，都是些高大上的名词，听起来云里雾里的！&lt;/p&gt;
&lt;p&gt;为了不让大家产生厌倦和畏难心理，我们先从一道小学数学计算题开始：&lt;/p&gt;
&lt;p&gt;不借助计算器，计算 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;large {66600 &#92;times
666000}&#92;)&lt;/span&gt; 的值！&lt;/p&gt;
&lt;p&gt;对于这道题，大家可能会列出下列算术：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
66600 &#92;times 666000 = 666 &#92;times 666 &#92;times 100000 = 44355600000
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;但其实呢，我们也可以使用下面的方法：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
&#92;begin{aligned}
66600 &#92;times 666000 &amp;amp;= 111^2 &#92;times 4 &#92;times 9 &#92;times 10^5
&#92;&#92;&amp;amp;= 444 &#92;times 999 &#92;times 10^5
&#92;&#92;&amp;amp;= 444 &#92;times (1000 - 1) &#92;times 10^5
&#92;&#92;&amp;amp;= 4443556 &#92;times 10^5    
&#92;end{aligned}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;如果我说上面这 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;large {2}&#92;)&lt;/span&gt;
种方法都用到了&lt;strong&gt;参数归约&lt;/strong&gt;的思想，你可能会感到震惊，什么？这种小学计算题也用到了参数归约算法吗？&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Algorithm/">Algorithm</category>
      
      <category domain="https://www.longluo.me/tags/Arithmetic/">Arithmetic</category>
      
      <category domain="https://www.longluo.me/tags/Argument-Reduction/">Argument Reduction</category>
      
      <category domain="https://www.longluo.me/tags/Computer-Arithmetic/">Computer Arithmetic</category>
      
      <category domain="https://www.longluo.me/tags/%E5%8F%82%E6%95%B0%E5%BD%92%E7%BA%A6/">参数归约</category>
      
      <category domain="https://www.longluo.me/tags/Floating-point/">Floating-point</category>
      
      <category domain="https://www.longluo.me/tags/%E6%B5%AE%E7%82%B9%E6%95%B0/">浮点数</category>
      
      <category domain="https://www.longluo.me/tags/Trigonometric/">Trigonometric</category>
      
      
      <comments>https://www.longluo.me/blog/argument-range-reduction/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>素描背后的数学</title>
      <link>https://www.longluo.me/blog/perspective/</link>
      <guid>https://www.longluo.me/blog/perspective/</guid>
      <pubDate>Wed, 02 Aug 2023 11:15:11 GMT</pubDate>
      
        
        
          
          
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;挖坑&quot;&gt;挖坑&lt;/h1&gt;
&lt;h1 id=&quot;参考文献&quot;&gt;参考文献&lt;/h1&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;a</description>
          
        
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Algorithm/">Algorithm</category>
      
      <category domain="https://www.longluo.me/tags/Art/">Art</category>
      
      <category domain="https://www.longluo.me/tags/Sketch/">Sketch</category>
      
      
      <comments>https://www.longluo.me/blog/perspective/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>发生在计算机内存里的进化：解密遗传算法(Genetic Algorithm)</title>
      <link>https://www.longluo.me/blog/genetic-algorithm/</link>
      <guid>https://www.longluo.me/blog/genetic-algorithm/</guid>
      <pubDate>Mon, 12 Jun 2023 00:32:31 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;这篇文章部分内容还在优化demo-还在继续开发大概还需要-7---8-小时写作时间&quot;&gt;这篇文章部分内容还在优化，Demo
还在继续开发，大概还需要 7 - 8 小时写作时间。&lt;/h1&gt;
&lt;p&gt;无限猴子定理（英语：Infinite monkey theorem）&lt;/p&gt;
&lt;p&gt;让一只猴子在打字机上随机地按键，当按键时间达到无穷时，几乎必然能够打出任何给定的文字，比如莎士比亚的全套著作。&lt;/p&gt;
&lt;p&gt;在这里，几乎必然是一个有特定含义的数学术语，“猴子”也不是一只真正意义上的猴子，它被用来比喻成一个可以产生无限随机字母序列的抽象设备。这个理论说明把一个很大但有限的数看成无限的推论是错误的。猴子精确地通过键盘敲打出一部完整的作品比如说莎士比亚的哈姆雷特，在宇宙的生命周期中发生的概率也是极其低的，但并不是零。&lt;/p&gt;
&lt;p&gt;遗传算法(Genetic Algorithm) &lt;a href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;
是一种元启发式搜索和优化技术，借鉴了生物进化中的自然选择和遗传机制。它已经在各个领域展示出了强大的应用潜力。本文将介绍遗传算法的发展历史、原理、示例，以及其广泛应用和不足之处。&lt;/p&gt;
&lt;h1 id=&quot;发展历史&quot;&gt;发展历史&lt;/h1&gt;
&lt;p&gt;遗传算法的发展可以追溯到上世纪60年代的约翰·荷兰德（John
Holland）和他的同事们的工作。他们首先提出了基因型与表现型之间的映射关系，并通过模拟生物进化过程来解决复杂的优化问题。&lt;/p&gt;
&lt;h1 id=&quot;原理&quot;&gt;原理&lt;/h1&gt;
&lt;p&gt;遗传算法的核心原理是模拟自然进化的过程。它通过定义适应度函数来评估候选解的质量，并利用遗传操作（选择、交叉和变异）对候选解进行迭代改进。具体而言，算法从一个初始种群开始，通过选择适应度较高的个体作为父代，进行交叉和变异操作产生新的后代个体，然后通过评估适应度来选择出下一代个体。这个过程不断迭代，直到找到满足特定条件的优秀解。&lt;/p&gt;
&lt;p&gt;It’s never too late&lt;/p&gt;
&lt;h1 id=&quot;举个例子&quot;&gt;举个例子&lt;/h1&gt;
&lt;p&gt;目前参考网络资源写了一个简单的Demo，地址：http://longluo.me/projects/genetic&lt;/p&gt;
&lt;p&gt;这个例子还有待完善！&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://longluo.me/projects/genetic&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3395062/247012809-febec500-50dd-4d52-a6f6-d5b86aba4132.png&quot; alt=&quot;Genetic Algorithm&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Algorithm/">Algorithm</category>
      
      <category domain="https://www.longluo.me/tags/Genetic-Algorithm/">Genetic Algorithm</category>
      
      <category domain="https://www.longluo.me/tags/AI/">AI</category>
      
      
      <comments>https://www.longluo.me/blog/genetic-algorithm/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>CORDIC算法：一种高效计算三角函数值的方法</title>
      <link>https://www.longluo.me/blog/cordic/</link>
      <guid>https://www.longluo.me/blog/cordic/</guid>
      <pubDate>Wed, 07 Jun 2023 09:11:28 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;任何一款科学计算器上都可以计算三角函数，三角函数应用于生活工作中的方方面面，但计算机是如何计算三角函数值的呢？&lt;/p&gt;
&lt;p&gt;三角函数本质上是直角三角形的3条边的&lt;strong&gt;比例关系&lt;/strong&gt;，计算并没有很直观，那么计算机是如何计算三角函数值的呢？&lt;/p&gt;
&lt;p&gt;在微积分中我们学习过 &lt;a href=&quot;https://www.longluo.me/blog/taylor-series/&quot;&gt;泰勒公式&lt;/a&gt;
，我们知道可以使用泰勒展开式来对某个值求得其近似值，例如：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
&#92;sin &#92;angle 18^{&#92;circ} = &#92;frac{&#92;sqrt {5} - 1}{4} &#92;approx 0.3090169943
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;利用泰勒公式，取前 &lt;span class=&quot;math inline&quot;&gt;&#92;(4&#92;)&lt;/span&gt; 项：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
&#92;sin x &#92;approx x - &#92;frac{x^3}{3!} + &#92;frac{x^5}{5!} - &#92;frac{x^7}{7!}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;代入可得：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
&#92;sin &#92;angle 18^{&#92;circ} = &#92;sin &#92;frac{&#92;pi}{10} = &#92;frac{&#92;pi}{10} -
&#92;frac{1}{6} (&#92;frac{&#92;pi}{10})^3 + &#92;frac{1}{120} (&#92;frac{&#92;pi}{10})^5 -
&#92;frac{1}{5040} (&#92;frac{&#92;pi}{10})^7 &#92;approx 0.30903399538
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;可见取前 &lt;span class=&quot;math inline&quot;&gt;&#92;(4&#92;)&lt;/span&gt; 项时精度已经在 &lt;span class=&quot;math inline&quot;&gt;&#92;(10^{-5}&#92;)&lt;/span&gt;
之下，对于很多场合精度已经&lt;strong&gt;足够高&lt;/strong&gt;了。&lt;/p&gt;
&lt;p&gt;在没有了解 CORDIC(Coordinate Rotation Digital Computer) Algorithm &lt;a href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;
算法之前，我一直以为计算器是利用泰勒公式去求解，最近才了解到原来在计算机中，CORDIC
算法&lt;strong&gt;远比&lt;/strong&gt;泰勒公式高效。&lt;/p&gt;
&lt;p&gt;下面我们就来了解下泰勒公式的不足之处和 CORDIC 算法是怎么做的。&lt;/p&gt;
&lt;h1 id=&quot;泰勒公式的缺点&quot;&gt;泰勒公式的缺点&lt;/h1&gt;
&lt;p&gt;上一节我们使用泰勒公式去计算三角函数值时，需要做很多次乘法运算，而计算器中乘法运算是很&lt;strong&gt;昂贵&lt;/strong&gt;的，其缺点如下所示：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;展开过小则会导致展开精度不够，展开过大则会导致计算量过大；&lt;/li&gt;
&lt;li&gt;幂运算需要使用乘法器，存在很多重复计算；&lt;/li&gt;
&lt;li&gt;需要很多变量来存储中间值。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在之前的文章 &lt;a href=&quot;https://www.longluo.me/blog/strassens-matrix-multiplication-algorithm/&quot;&gt;矩阵乘法的
Strassen 算法&lt;/a&gt;
，就是通过&lt;strong&gt;减少乘法，多做加法&lt;/strong&gt;，从而大大降低了运算量，那么我们可以用相同的思想来优化运算吗？&lt;/p&gt;
&lt;p&gt;当然可以，让我们请出今天的主角：&lt;strong&gt;CORDIC 算法&lt;/strong&gt;。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Algorithm/">Algorithm</category>
      
      <category domain="https://www.longluo.me/tags/CORDIC/">CORDIC</category>
      
      <category domain="https://www.longluo.me/tags/Trigonometry/">Trigonometry</category>
      
      
      <comments>https://www.longluo.me/blog/cordic/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>墨卡托的魔术：地图是如何欺骗你的眼睛的？</title>
      <link>https://www.longluo.me/blog/the-mercator-projection/</link>
      <guid>https://www.longluo.me/blog/the-mercator-projection/</guid>
      <pubDate>Sat, 20 May 2023 02:43:35 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最近在书店里看到一本 &lt;a href=&quot;https://book.douban.com/subject/35548116/&quot;&gt;《数学的奥秘》&lt;/a&gt;
，原著是 《The Secret Life of Equations: The 50 Greatest Equations and
How They Work》
，讲的是最伟大的数学方程式起源、构成、含义和应用。书的内容并不多，我看了其中的一部分，里面有讲
墨卡托投影( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;textit{Mercator
projection}&#92;)&lt;/span&gt; )&lt;a href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;我对地理和地图一直很感兴趣，但之前对原理一直一知半解的，只知道我们常见的地图都是墨卡托投影，由墨卡托(
&lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;textit{Gerardus Mercator}&#92;)&lt;/span&gt; )&lt;a href=&quot;#fn2&quot; class=&quot;footnote-ref&quot; id=&quot;fnref2&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; 在
1569年创立。但墨卡托投影的原理是什么却并不清楚。书里面只有几页，但具体公式缺乏说明及推导过程，所以这几天通过查找资料掌握了墨卡托投影的原理。&lt;/p&gt;
&lt;h1 id=&quot;如何绘制地图&quot;&gt;如何绘制地图？&lt;/h1&gt;
&lt;p&gt;在大航海时代，航海家可以通过六分仪和观察日月星辰获取到经纬度，但在茫茫大海中迷失方向是很可怕的事情，如何才能正确的航行到目的地呢？&lt;/p&gt;
&lt;p&gt;地球由于自转是一个两极比赤道略短的扁球体，但扁率约为 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;dfrac {1}{300}&#92;)&lt;/span&gt;
，非常之低，因为可以视为球体。因为&lt;strong&gt;球面不是可展曲面&lt;/strong&gt;，也就是如果展成平面的话，长度会发生形变，所以也会形变。因为根据高斯绝妙定理
( &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;textit{Theorema Egregium}&#92;)&lt;/span&gt; )&lt;a href=&quot;#fn3&quot; class=&quot;footnote-ref&quot; id=&quot;fnref3&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; ，平面的高斯曲率为 &lt;span class=&quot;math inline&quot;&gt;&#92;(0&#92;)&lt;/span&gt; ，而球面的高斯曲率为 &lt;span class=&quot;math inline&quot;&gt;&#92;(&#92;dfrac {1}{R^2}&#92;)&lt;/span&gt; ，其中 &lt;span class=&quot;math inline&quot;&gt;&#92;(R&#92;)&lt;/span&gt;
为球面半径，所以在保持图形完整性前提下，将球面转化为平面，投影后得到的经纬线网形状必然会产生变形，也就是说，在投影的过程中，变形是必然存在的。&lt;/p&gt;
&lt;p&gt;在这种情况下，墨卡托运用&lt;strong&gt;等角圆柱投影法&lt;/strong&gt;绘制了航海图，极大地方便了航海家。有了墨卡托海图，航海家想要到达某个目的地，只需要在出发点和目的地之间连一条直线，量出这条航线和经线的夹角，按照航行路线就能到达目的地。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://www.longluo.me/assets/blog/images/map/earth-map-mercator.jpg&quot; alt=&quot;图1. 地图的墨卡托投影&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;图1. 地图的墨卡托投影&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h1 id=&quot;什么是墨卡托投影&quot;&gt;什么是墨卡托投影？&lt;/h1&gt;
&lt;p&gt;设想将地球置于在一中空的圆柱里，如下图所示，其基准纬线（赤道）与圆柱相切。再设想地球中心处放置一灯泡，那么从球心处发射的光线会把球面上的图形投影到圆柱体上，之后再将把圆柱体展开，那么就可以得到一张墨卡托投影绘制出的地图。&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Map/">Map</category>
      
      <category domain="https://www.longluo.me/tags/Mercator-Projection/">Mercator Projection</category>
      
      
      <comments>https://www.longluo.me/blog/the-mercator-projection/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>智能控制系统的灵魂：深入研究 PID 控制器的算法逻辑</title>
      <link>https://www.longluo.me/blog/pid/</link>
      <guid>https://www.longluo.me/blog/pid/</guid>
      <pubDate>Fri, 05 May 2023 00:58:10 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PID 算法 s是自动控制领域中很重要的算法。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;&#92;[
u(t) = K_Pe(t) + K_I &#92;int e(t) &#92;mathrm{d}t + K_D
&#92;frac{&#92;mathrm{d}e(t)}{&#92;mathrm{d}t}
&#92;]&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&quot;simple-pid-controller&quot;&gt;Simple PID Controller&lt;/h1&gt;
&lt;p&gt;非常简单的 PID 算法在线互动式模拟器，&lt;a href=&quot;http://www.longluo.me/projects/pid/&quot;&gt;传送门 →&lt;/a&gt; ：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.longluo.me/projects/pid/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3395062/238180467-c7852d59-b9e3-4fe5-89b4-d8ddd4d44592.png&quot; alt=&quot;PID Algorithm&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之前这个是 PID v1.0 版本，最近重构了代码，增加了一些新功能：&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;增加机器人速度 &lt;span class=&quot;math inline&quot;&gt;&#92;(v&#92;)&lt;/span&gt; 及加速度 &lt;span class=&quot;math inline&quot;&gt;&#92;(a&#92;)&lt;/span&gt; 显示；&lt;/li&gt;
&lt;li&gt;增加 2 个图表展示 PID X 轴方向及 Y 轴方向的 P、I、D &lt;span class=&quot;math inline&quot;&gt;&#92;(3&#92;)&lt;/span&gt; 个分量随时间变化显示；&lt;/li&gt;
&lt;li&gt;之前代码将时间及速度固定了，但这不符合实际，增加随 &lt;span class=&quot;math inline&quot;&gt;&#92;(dt&#92;)&lt;/span&gt; 变化积分和微分项；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;http://www.longluo.me/projects/pid/&quot;&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/3395062/246782983-695c0d08-1998-4d96-b13b-a0a5827f19fc.png&quot; alt=&quot;pid_track&quot;&gt;&lt;/a&gt;&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/PID/">PID</category>
      
      <category domain="https://www.longluo.me/tags/Control-Theory/">Control Theory</category>
      
      
      <comments>https://www.longluo.me/blog/pid/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>解密卡尔曼滤波(Kalman Filter)算法：深入解析卡尔曼滤波算法原理与在线可视化实例 </title>
      <link>https://www.longluo.me/blog/kalman-filter/</link>
      <guid>https://www.longluo.me/blog/kalman-filter/</guid>
      <pubDate>Sat, 29 Apr 2023 14:36:45 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;&lt;em&gt;By Long Luo&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Kalman Filter&lt;a href=&quot;#fn1&quot; class=&quot;footnote-ref&quot; id=&quot;fnref1&quot; role=&quot;doc-noteref&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; 是贝叶斯滤波器的一种特殊实现。&lt;/p&gt;
&lt;h1 id=&quot;kalman-filter-1d-一维卡尔曼滤波器&quot;&gt;Kalman Filter 1D |
一维卡尔曼滤波器&lt;/h1&gt;
&lt;p&gt;一维卡尔曼滤波器如下图所示：&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://user-images.githubusercontent.com/3395062/239743987-c86b622d-7c17-429c-8221-def992aacf55.PNG&quot; alt=&quot;Kalman Filter 1D&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;Kalman Filter 1D&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;在线动画展示：http://www.longluo.me/projects/kalman/&lt;/p&gt;</description>
      
      
      
      
      <category domain="https://www.longluo.me/categories/Math/">Math</category>
      
      
      <category domain="https://www.longluo.me/tags/Math/">Math</category>
      
      <category domain="https://www.longluo.me/tags/Kalman-Filter/">Kalman Filter</category>
      
      
      <comments>https://www.longluo.me/blog/kalman-filter/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
